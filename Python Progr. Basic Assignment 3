{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Q1.Write a Python Program to Check if a Number is Positive, Negative or Zero?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the no : 5\n",
      "Given no is Positive\n"
     ]
    }
   ],
   "source": [
    "no = int(input(\"Enter the no : \"))\n",
    "\n",
    "if no == 0:\n",
    "    print(\"Given no is Zero\")\n",
    "elif no < 0:\n",
    "    print(\"Given no is Negative\")\n",
    "else:\n",
    "    print(\"Given no is Positive\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Q.2 Write a Python Program to Check if a Number is Odd or Even?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the no : 23\n",
      "23 is Even No\n"
     ]
    }
   ],
   "source": [
    "Num = int(input(\"Enter the no : \"))\n",
    "\n",
    "x = Num%2\n",
    "\n",
    "if x == 0:\n",
    "    print(\"{0} is Even No\".format (Num))\n",
    "else:\n",
    "    print(\"{0} is Even No\".format (Num))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Q3. Write a Python Program to Check Leap Year?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter the Year : 1990\n",
      "1990 is Leap not Year\n"
     ]
    }
   ],
   "source": [
    "Year = int(input(\"Enter the Year : \"))\n",
    "\n",
    "if (Year%4) == 0:\n",
    "    print(\"{0} is Leap Year\".format(Year))\n",
    "else:\n",
    "    print(\"{0} is Leap not Year\".format(Year))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Q4 Write a Python Program to Check Prime Number?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a number: 79\n",
      "79 is a prime number\n"
     ]
    }
   ],
   "source": [
    "num = int(input(\"Enter a number: \"))  \n",
    "  \n",
    "if num > 1:  \n",
    "   for i in range(2,num):  \n",
    "       if (num % i) == 0:  \n",
    "           print(num,\"is not a prime number\")\n",
    "           break\n",
    "   else:\n",
    "    print(num,\"is a prime number\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Q.5 Write a Python Program to Print all Prime Numbers in an Interval of 1-10000?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter lower range: 1\n",
      "Enter upper range: 100\n",
      "2 is a prime no.\n",
      "3 is a prime no.\n",
      "5 is a prime no.\n",
      "7 is a prime no.\n",
      "11 is a prime no.\n",
      "13 is a prime no.\n",
      "17 is a prime no.\n",
      "19 is a prime no.\n",
      "23 is a prime no.\n",
      "29 is a prime no.\n",
      "31 is a prime no.\n",
      "37 is a prime no.\n",
      "41 is a prime no.\n",
      "43 is a prime no.\n",
      "47 is a prime no.\n",
      "53 is a prime no.\n",
      "59 is a prime no.\n",
      "61 is a prime no.\n",
      "67 is a prime no.\n",
      "71 is a prime no.\n",
      "73 is a prime no.\n",
      "79 is a prime no.\n",
      "83 is a prime no.\n",
      "89 is a prime no.\n",
      "97 is a prime no.\n"
     ]
    }
   ],
   "source": [
    "lower = int(input(\"Enter lower range: \"))  \n",
    "upper = int(input(\"Enter upper range: \"))  \n",
    "  \n",
    "for num in range(lower,upper + 1):  \n",
    "   if num > 1:  \n",
    "       for i in range(2,num):  \n",
    "           if (num % i) == 0:\n",
    "            break\n",
    "       else:  \n",
    "           print(\"{0} is a prime no.\".format(num))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
